<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <system.data>
    <DbProviderFactories>
      <remove invariant="MySql.Data.MySqlClient" />
      <!--<add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.9.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />-->
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.10.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
      <remove invariant="Npgsql" />
      <add name="Npgsql" invariant="Npgsql" description=".Net Framework Data Provider for Postgresql" type="Npgsql.NpgsqlFactory, Npgsql" />
    </DbProviderFactories>
  </system.data>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <!--<provider invariantName="MySql.Data.MySqlClient" type="MySql.Data.MySqlClient.MySqlProviderServices, MySql.Data.Entity.EF6" />-->
      <provider invariantName="MySql.Data.MySqlClient" type="MySql.Data.MySqlClient.MySqlProviderServices, MySql.Data.Entity.EF6, Version=6.9.9.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
      <provider invariantName="Npgsql" type="Npgsql.NpgsqlServices, Npgsql.EntityFramework" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="MangningXssDBEntities" connectionString="Server=598fa0a4ea73c.bj.cdb.myqcloud.com; Port=5273; Database=Mangning.XSS; User ID=root; Password=eKbpH67i;" providerName="MySql.Data.MySqlClient" />
    <add name="BadoucaiDBEntities" connectionString="Server=172.13.31.214; Port=5432; Database=Crawler; User ID=postgres; Password=111111;" providerName="Npgsql" />
    <add name="ResumeMatchDBEntities" connectionString="Server=localhost;Database=ResumeMatchDB;Uid=postgres;Pwd=a123456;" providerName="Npgsql" />
  </connectionStrings>
  <appSettings>
    <add key="Resume.SavePath" value="D:\Badoucai\Resume\LocationJson\" />
    <add key="TaskCount" value="32" />
    <add key="Oss.New.Bucket" value="badoucai-core-data" />
    <add key="Oss.New.Url" value="http://oss-cn-beijing.aliyuncs.com" />
    <add key="Oss.New.KeyId" value="LTAIW2GDArHmAcOz" />
    <add key="Oss.New.KeySecret" value="Ym2h4JmeET198nOoeCPj0TAs6qn7ws" />
    <add key="Oss.New.FilePath" value="Zhaopin/" />
    <add key="Oss.New.ResumePath" value="Badoucai/" />
    <!--Mangning 阿里云 OSS Config-->
    <add key="Oss.Mangning.Bucket" value="mangning-xss" />
    <add key="Oss.Mangning.Url" value="http://oss-cn-beijing.aliyuncs.com" />
    <add key="Oss.Mangning.KeyId" value="LTAIPBjQrCmHlR63" />
    <add key="Oss.Mangning.KeySecret" value="IlOieQaf0EydXLpWM1QWstMZFB5Nxp" />
  </appSettings>
  <log4net>
    <!-- You can add your own appender here. -->
    <!-- Define some output appenders -->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <!--
    This appender is used for writing application log.
    -->
    <appender name="InfoRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- Log file name, you can find the file in the application startup directory. -->
      <param name="File" type="log4net.Util.PatternString" value="Log\Info\" />
      <param name="Encoding" value="UTF-8" />
      <param name="AppendToFile" value="true" />
      <param name="MaxSizeRollBackups" value="30" />
      <!-- 
      The maximum size of the log file, 
      when the log file size exceed this size, 
      a new log.txt will created and the old one will rename to log.txt.1.
      -->
      <param name="MaximumFileSize" value="5MB" />
      <param name="RollingStyle" value="Date" />
      <param name="StaticLogFileName" value="false" />
      <param name="lockingModel" type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="DatePattern" value="yyyy-MM-dd&quot;.log&quot;" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{HH:mm:ss.fff} [%thread] %logger - %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="INFO" />
        <param name="LevelMax" value="INFO" />
      </filter>
    </appender>
    <appender name="ErrorRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- Log file name, you can find the file in the application startup directory. -->
      <param name="File" type="log4net.Util.PatternString" value="Log\Error\" />
      <param name="Encoding" value="UTF-8" />
      <param name="AppendToFile" value="true" />
      <param name="MaxSizeRollBackups" value="30" />
      <!-- 
      The maximum size of the log file, 
      when the log file size exceed this size, 
      a new log.txt will created and the old one will rename to log.txt.1.
      -->
      <param name="MaximumFileSize" value="5MB" />
      <param name="RollingStyle" value="Date" />
      <param name="StaticLogFileName" value="false" />
      <param name="lockingModel" type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="DatePattern" value="yyyy-MM-dd&quot;.log&quot;" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{HH:mm:ss.fff} [%thread] %logger - %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ERROR" />
        <param name="LevelMax" value="ERROR" />
      </filter>
    </appender>
    <appender name="WarnRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- Log file name, you can find the file in the application startup directory. -->
      <param name="File" type="log4net.Util.PatternString" value="Log\Warn\" />
      <param name="Encoding" value="UTF-8" />
      <param name="AppendToFile" value="true" />
      <param name="MaxSizeRollBackups" value="30" />
      <!-- 
      The maximum size of the log file, 
      when the log file size exceed this size, 
      a new log.txt will created and the old one will rename to log.txt.1.
      -->
      <param name="MaximumFileSize" value="5MB" />
      <param name="RollingStyle" value="Date" />
      <param name="StaticLogFileName" value="false" />
      <param name="lockingModel" type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="DatePattern" value="yyyy-MM-dd&quot;.log&quot;" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{HH:mm:ss.fff} [%thread] %logger - %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="WARN" />
        <param name="LevelMax" value="WARN" />
      </filter>
    </appender>
    <appender name="DebugRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- Log file name, you can find the file in the application startup directory. -->
      <param name="File" type="log4net.Util.PatternString" value="Log\Debug\" />
      <param name="Encoding" value="UTF-8" />
      <param name="AppendToFile" value="true" />
      <param name="MaxSizeRollBackups" value="30" />
      <!-- 
      The maximum size of the log file, 
      when the log file size exceed this size, 
      a new log.txt will created and the old one will rename to log.txt.1.
      -->
      <param name="MaximumFileSize" value="5MB" />
      <param name="RollingStyle" value="Date" />
      <param name="StaticLogFileName" value="false" />
      <param name="lockingModel" type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="DatePattern" value="yyyy-MM-dd&quot;.log&quot;" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{HH:mm:ss.fff} [%thread] %logger %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="DEBUG" />
      </filter>
    </appender>
    <!-- 
    The root logger.
    Set the level to log the necessary log information only.
    The level can be set to: ALL, DEBUG, INFO, WARN, ERROR, Fatal
    The appender-ref can be set the any appender name in this configuration file.
    -->
    <root>
      <level value="All" />
      <appender-ref ref="InfoRollingFileAppender" />
      <appender-ref ref="ErrorRollingFileAppender" />
      <appender-ref ref="WarnRollingFileAppender" />
      <appender-ref ref="DebugRollingFileAppender" />
      <!--<appender-ref ref="ConsoleAppender"/>-->
    </root>
  </log4net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="PostSharp" publicKeyToken="b13fd38b8f9c99d7" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.33.0" newVersion="5.0.33.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="PostSharp.Patterns.Diagnostics" publicKeyToken="e7f631e6ce13f078" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.34.0" newVersion="5.0.34.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="PostSharp.Patterns.Common" publicKeyToken="e7f631e6ce13f078" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.34.0" newVersion="5.0.34.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="MySql.Data" publicKeyToken="c5687fc88969c44d" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.9.10.0" newVersion="6.9.10.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>